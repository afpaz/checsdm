/*
 * Copyright (c) 2016-2019 ÉTS
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     https://www.apache.org/licenses/LICENSE-2.0
 *     
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

/**
 * @author: Andrés Paz
 */

package ca.ets.sofeess.checsdm4uss.guidelinecompliance

import "http://www.eclipse.org/uml2/5.0.0/UML"

/*
 * Guideline			av_0003: Naming of elements in UML models
 * (ID: Title)
 * 
 * Priority			Mandatory
 * 
 * Scope				UML
 * 
 * Prerequisites		None
 * 
 * Description		All NamedElements in a UML model must have a name.
 * 
 * Rationale			Finding matches between UML, Simulink and Stateflow models relies on naming.
 */

@Constraint(targetEditorId = "org.eclipse.uml2.uml.editor.presentation.UMLEditorID",
	severity = "error",
	message = "[av_0003] The element must have a name.",
	key = {namedElement}
) // Find UML elements without a name 
pattern umlNamedElementEmptyName(namedElement : NamedElement) {
	neg find umlNamedElementName(namedElement);
	neg find namedElementIsLiteralSpecification(namedElement);
	neg find namedElementIsValueSpecification(namedElement);
}

// Find UML elements with a name
pattern umlNamedElementName(namedElement : NamedElement) {
	NamedElement.name(namedElement, name);
	check (
		name.matches(".+")
	);
}

// Find UML named elements that are literal specifications
pattern namedElementIsLiteralSpecification(namedElement : NamedElement) {
	NamedElement(namedElement);
	LiteralSpecification(namedElement);
}

// Find UML named elements that are value specifications
pattern namedElementIsValueSpecification(namedElement : NamedElement) {
	NamedElement(namedElement);
	ValueSpecification(namedElement);
}
